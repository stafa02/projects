package recommenderSystem;

import java.util.List;

/*
 * Predicts missing ratings using weighted sum prediction formula.
 * Uses similarity generated by SimilarityGenerator.
 */
public class Predictor {
	int[][] ratingMatrix;

	public Predictor(int[][] ratingMatrix) {
		this.ratingMatrix = ratingMatrix;
	}

	//generates prediction for given user, item.
	public int Predict(int item, int user, List<ItemSimlarity> similarItems, int[] userAvg) {
		double prod, sumSimilarity = 0, sumUser = 0;
		for (ItemSimlarity similarItem : similarItems) {
			if (ratingMatrix[user][similarItem.getItem()] > 0) {
				prod = similarItem.getSimilarity() * ratingMatrix[user][similarItem.getItem()];
				sumUser += prod;
				sumSimilarity += Math.abs(similarItem.getSimilarity());
			}
		}
		if (sumSimilarity == 0) {
			return userAvg[user];
		}
		return (int) Math.round(sumUser / sumSimilarity);
	}

}
